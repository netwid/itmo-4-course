plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework:spring-core:6.1.14'
    implementation 'org.springframework:spring-beans:6.1.14'
    implementation 'org.springframework:spring-context:6.1.14'

    implementation 'org.springframework:spring-webmvc:6.1.14'

    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.31'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.31'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0' // Servlet API

    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    implementation 'org.springframework.data:spring-data-jpa:3.3.4'
    implementation 'org.springframework:spring-tx:6.1.14'
    implementation 'org.postgresql:postgresql:42.7.4'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.hibernate.orm:hibernate-core:6.6.1.Final'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.0'


    implementation 'org.modelmapper:modelmapper:3.2.1'

    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
            'Main-Class': 'dev.App' // Замените на ваш основной класс
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
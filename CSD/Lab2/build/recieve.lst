ARM GAS  /tmp/ccM045Kp.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"recieve.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/recieve.c"
  20              		.section	.text.TurnLedOn,"ax",%progbits
  21              		.align	1
  22              		.global	TurnLedOn
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	TurnLedOn:
  28              	.LFB134:
   1:Core/Src/recieve.c **** #include <stdlib.h>
   2:Core/Src/recieve.c **** 
   3:Core/Src/recieve.c **** #include "main.h"
   4:Core/Src/recieve.c **** #include "recieve.h"
   5:Core/Src/recieve.c **** #include "queue.h"
   6:Core/Src/recieve.c **** #include "global.h"
   7:Core/Src/recieve.c **** 
   8:Core/Src/recieve.c **** void TurnLedOn()
   9:Core/Src/recieve.c **** {
  29              		.loc 1 9 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  10:Core/Src/recieve.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  38              		.loc 1 10 3 view .LVU1
  39 0002 0122     		movs	r2, #1
  40 0004 4FF40051 		mov	r1, #8192
  41 0008 0148     		ldr	r0, .L3
  42 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  43              	.LVL0:
  11:Core/Src/recieve.c **** }
  44              		.loc 1 11 1 is_stmt 0 view .LVU2
  45 000e 08BD     		pop	{r3, pc}
  46              	.L4:
  47              		.align	2
ARM GAS  /tmp/ccM045Kp.s 			page 2


  48              	.L3:
  49 0010 000C0240 		.word	1073875968
  50              		.cfi_endproc
  51              	.LFE134:
  53              		.section	.text.TurnLedOff,"ax",%progbits
  54              		.align	1
  55              		.global	TurnLedOff
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	TurnLedOff:
  61              	.LFB135:
  12:Core/Src/recieve.c **** void TurnLedOff()
  13:Core/Src/recieve.c **** {
  62              		.loc 1 13 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 08B5     		push	{r3, lr}
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 3, -8
  70              		.cfi_offset 14, -4
  14:Core/Src/recieve.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
  71              		.loc 1 14 3 view .LVU4
  72 0002 0022     		movs	r2, #0
  73 0004 4FF40051 		mov	r1, #8192
  74 0008 0148     		ldr	r0, .L7
  75 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  76              	.LVL1:
  15:Core/Src/recieve.c **** }
  77              		.loc 1 15 1 is_stmt 0 view .LVU5
  78 000e 08BD     		pop	{r3, pc}
  79              	.L8:
  80              		.align	2
  81              	.L7:
  82 0010 000C0240 		.word	1073875968
  83              		.cfi_endproc
  84              	.LFE135:
  86              		.section	.text.HandleReceivedMorse,"ax",%progbits
  87              		.align	1
  88              		.global	HandleReceivedMorse
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  93              	HandleReceivedMorse:
  94              	.LFB136:
  16:Core/Src/recieve.c **** 
  17:Core/Src/recieve.c **** static char currentChar = 0;
  18:Core/Src/recieve.c **** static size_t index = 0;
  19:Core/Src/recieve.c **** static uint32_t lastActionTime = 0;
  20:Core/Src/recieve.c **** static _Bool isLedOn = 0;
  21:Core/Src/recieve.c **** static _Bool isIdle = 1;
  22:Core/Src/recieve.c **** static _Bool symbolFinished = 0;
  23:Core/Src/recieve.c **** 
  24:Core/Src/recieve.c **** void HandleReceivedMorse()
  25:Core/Src/recieve.c **** {
ARM GAS  /tmp/ccM045Kp.s 			page 3


  95              		.loc 1 25 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 10B5     		push	{r4, lr}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
  26:Core/Src/recieve.c ****   uint32_t currentTime = HAL_GetTick();
 104              		.loc 1 26 3 view .LVU7
 105              		.loc 1 26 26 is_stmt 0 view .LVU8
 106 0002 FFF7FEFF 		bl	HAL_GetTick
 107              	.LVL2:
 108 0006 0446     		mov	r4, r0
 109              	.LVL3:
  27:Core/Src/recieve.c **** 
  28:Core/Src/recieve.c ****   if (symbolFinished)
 110              		.loc 1 28 3 is_stmt 1 view .LVU9
 111              		.loc 1 28 7 is_stmt 0 view .LVU10
 112 0008 304B     		ldr	r3, .L24
 113 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 114              		.loc 1 28 6 view .LVU11
 115 000c 5BB1     		cbz	r3, .L10
  29:Core/Src/recieve.c ****   {
  30:Core/Src/recieve.c ****     if (currentTime - lastActionTime > INTER_SYMBOL_TIMEOUT)
 116              		.loc 1 30 5 is_stmt 1 view .LVU12
 117              		.loc 1 30 21 is_stmt 0 view .LVU13
 118 000e 304B     		ldr	r3, .L24+4
 119 0010 1B68     		ldr	r3, [r3]
 120 0012 C31A     		subs	r3, r0, r3
 121              		.loc 1 30 8 view .LVU14
 122 0014 B3F5167F 		cmp	r3, #600
 123 0018 18D9     		bls	.L9
  31:Core/Src/recieve.c ****     {
  32:Core/Src/recieve.c ****       isIdle = 1;
 124              		.loc 1 32 7 is_stmt 1 view .LVU15
 125              		.loc 1 32 14 is_stmt 0 view .LVU16
 126 001a 2E4B     		ldr	r3, .L24+8
 127 001c 0122     		movs	r2, #1
 128 001e 1A70     		strb	r2, [r3]
  33:Core/Src/recieve.c ****       symbolFinished = 0;
 129              		.loc 1 33 7 is_stmt 1 view .LVU17
 130              		.loc 1 33 22 is_stmt 0 view .LVU18
 131 0020 2A4B     		ldr	r3, .L24
 132 0022 0022     		movs	r2, #0
 133 0024 1A70     		strb	r2, [r3]
 134              	.L10:
  34:Core/Src/recieve.c ****     }
  35:Core/Src/recieve.c ****     else
  36:Core/Src/recieve.c ****     {
  37:Core/Src/recieve.c ****       return;
  38:Core/Src/recieve.c ****     }
  39:Core/Src/recieve.c ****   }
  40:Core/Src/recieve.c **** 
  41:Core/Src/recieve.c ****   if (isIdle)
 135              		.loc 1 41 3 is_stmt 1 view .LVU19
ARM GAS  /tmp/ccM045Kp.s 			page 4


 136              		.loc 1 41 7 is_stmt 0 view .LVU20
 137 0026 2B4B     		ldr	r3, .L24+8
 138 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139              		.loc 1 41 6 view .LVU21
 140 002a 83B9     		cbnz	r3, .L19
 141              	.LVL4:
 142              	.L12:
  42:Core/Src/recieve.c ****   {
  43:Core/Src/recieve.c ****     currentChar = QueuePop();
  44:Core/Src/recieve.c ****     index = 0;
  45:Core/Src/recieve.c ****     if (currentChar == 0)
  46:Core/Src/recieve.c ****     {
  47:Core/Src/recieve.c ****       TurnLedOff();
  48:Core/Src/recieve.c ****       return;
  49:Core/Src/recieve.c ****     }
  50:Core/Src/recieve.c ****     isIdle = 0;
  51:Core/Src/recieve.c ****   }
  52:Core/Src/recieve.c **** 
  53:Core/Src/recieve.c ****   char currentSymbol = Morse[currentChar - 'a'][index];
 143              		.loc 1 53 3 is_stmt 1 view .LVU22
 144              		.loc 1 53 42 is_stmt 0 view .LVU23
 145 002c 2A4B     		ldr	r3, .L24+12
 146 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 147 0030 613B     		subs	r3, r3, #97
 148              		.loc 1 53 29 view .LVU24
 149 0032 2A4A     		ldr	r2, .L24+16
 150 0034 52F82320 		ldr	r2, [r2, r3, lsl #2]
 151              		.loc 1 53 48 view .LVU25
 152 0038 294B     		ldr	r3, .L24+20
 153 003a 1B68     		ldr	r3, [r3]
 154              		.loc 1 53 8 view .LVU26
 155 003c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 156              	.LVL5:
  54:Core/Src/recieve.c **** 
  55:Core/Src/recieve.c ****   if (isLedOn)
 157              		.loc 1 55 3 is_stmt 1 view .LVU27
 158              		.loc 1 55 7 is_stmt 0 view .LVU28
 159 003e 294A     		ldr	r2, .L24+24
 160 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 161              		.loc 1 55 6 view .LVU29
 162 0042 5AB3     		cbz	r2, .L14
  56:Core/Src/recieve.c ****   {
  57:Core/Src/recieve.c ****     if ((currentSymbol == '.' && currentTime - lastActionTime >= DOT_DURATION) ||
 163              		.loc 1 57 5 is_stmt 1 view .LVU30
 164              		.loc 1 57 8 is_stmt 0 view .LVU31
 165 0044 2E2B     		cmp	r3, #46
 166 0046 11D0     		beq	.L20
 167              	.L15:
 168              		.loc 1 57 80 discriminator 3 view .LVU32
 169 0048 2D2B     		cmp	r3, #45
 170 004a 20D0     		beq	.L21
 171              	.LVL6:
 172              	.L9:
  58:Core/Src/recieve.c ****         (currentSymbol == '-' && currentTime - lastActionTime >= DASH_DURATION))
  59:Core/Src/recieve.c ****     {
  60:Core/Src/recieve.c ****       TurnLedOff();
  61:Core/Src/recieve.c ****       isLedOn = 0;
ARM GAS  /tmp/ccM045Kp.s 			page 5


  62:Core/Src/recieve.c ****       index++;
  63:Core/Src/recieve.c ****       lastActionTime = currentTime;
  64:Core/Src/recieve.c ****     }
  65:Core/Src/recieve.c ****   }
  66:Core/Src/recieve.c ****   else
  67:Core/Src/recieve.c ****   {
  68:Core/Src/recieve.c ****     if (currentSymbol == '\0')
  69:Core/Src/recieve.c ****     {
  70:Core/Src/recieve.c ****       TurnLedOff();
  71:Core/Src/recieve.c ****       symbolFinished = 1;
  72:Core/Src/recieve.c ****       index = 0;
  73:Core/Src/recieve.c ****       return;
  74:Core/Src/recieve.c ****     }
  75:Core/Src/recieve.c ****     else if (currentTime - lastActionTime >= INTER_ELEMENT_TIMEOUT)
  76:Core/Src/recieve.c ****     {
  77:Core/Src/recieve.c ****       // Моргнуть светодиодом в зависимости от символа
  78:Core/Src/recieve.c ****       TurnLedOn();
  79:Core/Src/recieve.c ****       isLedOn = 1;
  80:Core/Src/recieve.c ****       lastActionTime = currentTime;
  81:Core/Src/recieve.c ****     }
  82:Core/Src/recieve.c ****   }
  83:Core/Src/recieve.c **** }
 173              		.loc 1 83 1 view .LVU33
 174 004c 10BD     		pop	{r4, pc}
 175              	.LVL7:
 176              	.L19:
  43:Core/Src/recieve.c ****     index = 0;
 177              		.loc 1 43 5 is_stmt 1 view .LVU34
  43:Core/Src/recieve.c ****     index = 0;
 178              		.loc 1 43 19 is_stmt 0 view .LVU35
 179 004e FFF7FEFF 		bl	QueuePop
 180              	.LVL8:
  43:Core/Src/recieve.c ****     index = 0;
 181              		.loc 1 43 17 discriminator 1 view .LVU36
 182 0052 214B     		ldr	r3, .L24+12
 183 0054 1870     		strb	r0, [r3]
  44:Core/Src/recieve.c ****     if (currentChar == 0)
 184              		.loc 1 44 5 is_stmt 1 view .LVU37
  44:Core/Src/recieve.c ****     if (currentChar == 0)
 185              		.loc 1 44 11 is_stmt 0 view .LVU38
 186 0056 224B     		ldr	r3, .L24+20
 187 0058 0022     		movs	r2, #0
 188 005a 1A60     		str	r2, [r3]
  45:Core/Src/recieve.c ****     {
 189              		.loc 1 45 5 is_stmt 1 view .LVU39
  45:Core/Src/recieve.c ****     {
 190              		.loc 1 45 8 is_stmt 0 view .LVU40
 191 005c 18B1     		cbz	r0, .L22
  50:Core/Src/recieve.c ****   }
 192              		.loc 1 50 5 is_stmt 1 view .LVU41
  50:Core/Src/recieve.c ****   }
 193              		.loc 1 50 12 is_stmt 0 view .LVU42
 194 005e 1D4B     		ldr	r3, .L24+8
 195 0060 0022     		movs	r2, #0
 196 0062 1A70     		strb	r2, [r3]
 197 0064 E2E7     		b	.L12
 198              	.L22:
ARM GAS  /tmp/ccM045Kp.s 			page 6


  47:Core/Src/recieve.c ****       return;
 199              		.loc 1 47 7 is_stmt 1 view .LVU43
 200 0066 FFF7FEFF 		bl	TurnLedOff
 201              	.LVL9:
  48:Core/Src/recieve.c ****     }
 202              		.loc 1 48 7 view .LVU44
 203 006a EFE7     		b	.L9
 204              	.LVL10:
 205              	.L20:
  57:Core/Src/recieve.c ****         (currentSymbol == '-' && currentTime - lastActionTime >= DASH_DURATION))
 206              		.loc 1 57 46 is_stmt 0 discriminator 1 view .LVU45
 207 006c 184A     		ldr	r2, .L24+4
 208 006e 1268     		ldr	r2, [r2]
 209 0070 A21A     		subs	r2, r4, r2
  57:Core/Src/recieve.c ****         (currentSymbol == '-' && currentTime - lastActionTime >= DASH_DURATION))
 210              		.loc 1 57 31 discriminator 1 view .LVU46
 211 0072 C72A     		cmp	r2, #199
 212 0074 E8D9     		bls	.L15
 213              	.LVL11:
 214              	.L16:
  60:Core/Src/recieve.c ****       isLedOn = 0;
 215              		.loc 1 60 7 is_stmt 1 view .LVU47
 216 0076 FFF7FEFF 		bl	TurnLedOff
 217              	.LVL12:
  61:Core/Src/recieve.c ****       index++;
 218              		.loc 1 61 7 view .LVU48
  61:Core/Src/recieve.c ****       index++;
 219              		.loc 1 61 15 is_stmt 0 view .LVU49
 220 007a 1A4B     		ldr	r3, .L24+24
 221 007c 0022     		movs	r2, #0
 222 007e 1A70     		strb	r2, [r3]
  62:Core/Src/recieve.c ****       lastActionTime = currentTime;
 223              		.loc 1 62 7 is_stmt 1 view .LVU50
  62:Core/Src/recieve.c ****       lastActionTime = currentTime;
 224              		.loc 1 62 12 is_stmt 0 view .LVU51
 225 0080 174A     		ldr	r2, .L24+20
 226 0082 1368     		ldr	r3, [r2]
 227 0084 0133     		adds	r3, r3, #1
 228 0086 1360     		str	r3, [r2]
  63:Core/Src/recieve.c ****     }
 229              		.loc 1 63 7 is_stmt 1 view .LVU52
  63:Core/Src/recieve.c ****     }
 230              		.loc 1 63 22 is_stmt 0 view .LVU53
 231 0088 114B     		ldr	r3, .L24+4
 232 008a 1C60     		str	r4, [r3]
 233 008c DEE7     		b	.L9
 234              	.LVL13:
 235              	.L21:
  58:Core/Src/recieve.c ****     {
 236              		.loc 1 58 46 view .LVU54
 237 008e 104B     		ldr	r3, .L24+4
 238              	.LVL14:
  58:Core/Src/recieve.c ****     {
 239              		.loc 1 58 46 view .LVU55
 240 0090 1B68     		ldr	r3, [r3]
 241 0092 E31A     		subs	r3, r4, r3
  58:Core/Src/recieve.c ****     {
ARM GAS  /tmp/ccM045Kp.s 			page 7


 242              		.loc 1 58 31 view .LVU56
 243 0094 B3F57A7F 		cmp	r3, #1000
 244 0098 D8D3     		bcc	.L9
 245 009a ECE7     		b	.L16
 246              	.LVL15:
 247              	.L14:
  68:Core/Src/recieve.c ****     {
 248              		.loc 1 68 5 is_stmt 1 view .LVU57
  68:Core/Src/recieve.c ****     {
 249              		.loc 1 68 8 is_stmt 0 view .LVU58
 250 009c 63B1     		cbz	r3, .L23
  75:Core/Src/recieve.c ****     {
 251              		.loc 1 75 10 is_stmt 1 view .LVU59
  75:Core/Src/recieve.c ****     {
 252              		.loc 1 75 26 is_stmt 0 view .LVU60
 253 009e 0C4B     		ldr	r3, .L24+4
 254              	.LVL16:
  75:Core/Src/recieve.c ****     {
 255              		.loc 1 75 26 view .LVU61
 256 00a0 1B68     		ldr	r3, [r3]
 257 00a2 E31A     		subs	r3, r4, r3
  75:Core/Src/recieve.c ****     {
 258              		.loc 1 75 13 view .LVU62
 259 00a4 C72B     		cmp	r3, #199
 260 00a6 D1D9     		bls	.L9
  78:Core/Src/recieve.c ****       isLedOn = 1;
 261              		.loc 1 78 7 is_stmt 1 view .LVU63
 262 00a8 FFF7FEFF 		bl	TurnLedOn
 263              	.LVL17:
  79:Core/Src/recieve.c ****       lastActionTime = currentTime;
 264              		.loc 1 79 7 view .LVU64
  79:Core/Src/recieve.c ****       lastActionTime = currentTime;
 265              		.loc 1 79 15 is_stmt 0 view .LVU65
 266 00ac 0D4B     		ldr	r3, .L24+24
 267 00ae 0122     		movs	r2, #1
 268 00b0 1A70     		strb	r2, [r3]
  80:Core/Src/recieve.c ****     }
 269              		.loc 1 80 7 is_stmt 1 view .LVU66
  80:Core/Src/recieve.c ****     }
 270              		.loc 1 80 22 is_stmt 0 view .LVU67
 271 00b2 074B     		ldr	r3, .L24+4
 272 00b4 1C60     		str	r4, [r3]
 273 00b6 C9E7     		b	.L9
 274              	.LVL18:
 275              	.L23:
  70:Core/Src/recieve.c ****       symbolFinished = 1;
 276              		.loc 1 70 7 is_stmt 1 view .LVU68
 277 00b8 FFF7FEFF 		bl	TurnLedOff
 278              	.LVL19:
  71:Core/Src/recieve.c ****       index = 0;
 279              		.loc 1 71 7 view .LVU69
  71:Core/Src/recieve.c ****       index = 0;
 280              		.loc 1 71 22 is_stmt 0 view .LVU70
 281 00bc 034B     		ldr	r3, .L24
 282 00be 0122     		movs	r2, #1
 283 00c0 1A70     		strb	r2, [r3]
  72:Core/Src/recieve.c ****       return;
ARM GAS  /tmp/ccM045Kp.s 			page 8


 284              		.loc 1 72 7 is_stmt 1 view .LVU71
  72:Core/Src/recieve.c ****       return;
 285              		.loc 1 72 13 is_stmt 0 view .LVU72
 286 00c2 074B     		ldr	r3, .L24+20
 287 00c4 0022     		movs	r2, #0
 288 00c6 1A60     		str	r2, [r3]
  73:Core/Src/recieve.c ****     }
 289              		.loc 1 73 7 is_stmt 1 view .LVU73
 290 00c8 C0E7     		b	.L9
 291              	.L25:
 292 00ca 00BF     		.align	2
 293              	.L24:
 294 00cc 00000000 		.word	symbolFinished
 295 00d0 00000000 		.word	lastActionTime
 296 00d4 00000000 		.word	isIdle
 297 00d8 00000000 		.word	currentChar
 298 00dc 00000000 		.word	Morse
 299 00e0 00000000 		.word	index
 300 00e4 00000000 		.word	isLedOn
 301              		.cfi_endproc
 302              	.LFE136:
 304              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 305              		.align	1
 306              		.global	HAL_UART_RxCpltCallback
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	HAL_UART_RxCpltCallback:
 312              	.LVL20:
 313              	.LFB137:
  84:Core/Src/recieve.c **** 
  85:Core/Src/recieve.c **** static uint8_t receivedChar;
  86:Core/Src/recieve.c **** 
  87:Core/Src/recieve.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  88:Core/Src/recieve.c **** {
 314              		.loc 1 88 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		.loc 1 88 1 is_stmt 0 view .LVU75
 319 0000 10B5     		push	{r4, lr}
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 324 0002 0446     		mov	r4, r0
  89:Core/Src/recieve.c ****   if (receivedChar == '+')
 325              		.loc 1 89 3 is_stmt 1 view .LVU76
 326              		.loc 1 89 20 is_stmt 0 view .LVU77
 327 0004 074B     		ldr	r3, .L31
 328 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 329              	.LVL21:
 330              		.loc 1 89 6 view .LVU78
 331 0008 2B28     		cmp	r0, #43
 332 000a 07D0     		beq	.L30
  90:Core/Src/recieve.c ****   {
  91:Core/Src/recieve.c ****     irqEnabled = 0;
ARM GAS  /tmp/ccM045Kp.s 			page 9


  92:Core/Src/recieve.c ****     return;
  93:Core/Src/recieve.c ****   }
  94:Core/Src/recieve.c **** 
  95:Core/Src/recieve.c ****   QueuePush(receivedChar);
 333              		.loc 1 95 3 is_stmt 1 view .LVU79
 334 000c FFF7FEFF 		bl	QueuePush
 335              	.LVL22:
  96:Core/Src/recieve.c ****   HAL_UART_Receive_IT(huart, &receivedChar, 1);
 336              		.loc 1 96 3 view .LVU80
 337 0010 0122     		movs	r2, #1
 338 0012 0449     		ldr	r1, .L31
 339 0014 2046     		mov	r0, r4
 340 0016 FFF7FEFF 		bl	HAL_UART_Receive_IT
 341              	.LVL23:
 342              	.L26:
  97:Core/Src/recieve.c **** }
 343              		.loc 1 97 1 is_stmt 0 view .LVU81
 344 001a 10BD     		pop	{r4, pc}
 345              	.LVL24:
 346              	.L30:
  91:Core/Src/recieve.c ****     return;
 347              		.loc 1 91 5 is_stmt 1 view .LVU82
  91:Core/Src/recieve.c ****     return;
 348              		.loc 1 91 16 is_stmt 0 view .LVU83
 349 001c 024B     		ldr	r3, .L31+4
 350 001e 0022     		movs	r2, #0
 351 0020 1A70     		strb	r2, [r3]
  92:Core/Src/recieve.c ****   }
 352              		.loc 1 92 5 is_stmt 1 view .LVU84
 353 0022 FAE7     		b	.L26
 354              	.L32:
 355              		.align	2
 356              	.L31:
 357 0024 00000000 		.word	receivedChar
 358 0028 00000000 		.word	irqEnabled
 359              		.cfi_endproc
 360              	.LFE137:
 362              		.section	.text.HandleReceive,"ax",%progbits
 363              		.align	1
 364              		.global	HandleReceive
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	HandleReceive:
 370              	.LVL25:
 371              	.LFB138:
  98:Core/Src/recieve.c **** 
  99:Core/Src/recieve.c **** void HandleReceive(UART_HandleTypeDef *huart)
 100:Core/Src/recieve.c **** {
 372              		.loc 1 100 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		.loc 1 100 1 is_stmt 0 view .LVU86
 377 0000 10B5     		push	{r4, lr}
 378              	.LCFI4:
 379              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccM045Kp.s 			page 10


 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 101:Core/Src/recieve.c ****   // Recieve UART ans push to queue
 102:Core/Src/recieve.c ****   if (!irqEnabled && HAL_UART_Receive(huart, &receivedChar, 1, 10) == HAL_OK)
 382              		.loc 1 102 3 is_stmt 1 view .LVU87
 383              		.loc 1 102 7 is_stmt 0 view .LVU88
 384 0002 0D4B     		ldr	r3, .L39
 385 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386              		.loc 1 102 6 view .LVU89
 387 0006 63B9     		cbnz	r3, .L34
 388 0008 0446     		mov	r4, r0
 389              		.loc 1 102 22 discriminator 1 view .LVU90
 390 000a 0A23     		movs	r3, #10
 391 000c 0122     		movs	r2, #1
 392 000e 0B49     		ldr	r1, .L39+4
 393 0010 FFF7FEFF 		bl	HAL_UART_Receive
 394              	.LVL26:
 395              		.loc 1 102 19 discriminator 1 view .LVU91
 396 0014 28B9     		cbnz	r0, .L34
 103:Core/Src/recieve.c ****   {
 104:Core/Src/recieve.c ****     if (receivedChar == '+')
 397              		.loc 1 104 5 is_stmt 1 view .LVU92
 398              		.loc 1 104 22 is_stmt 0 view .LVU93
 399 0016 094B     		ldr	r3, .L39+4
 400 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 401              		.loc 1 104 8 view .LVU94
 402 001a 2B28     		cmp	r0, #43
 403 001c 04D0     		beq	.L38
 105:Core/Src/recieve.c ****     {
 106:Core/Src/recieve.c ****       irqEnabled = 1;
 107:Core/Src/recieve.c ****       HAL_UART_Receive_IT(huart, &receivedChar, 1);
 108:Core/Src/recieve.c ****       return;
 109:Core/Src/recieve.c ****     }
 110:Core/Src/recieve.c ****     QueuePush(receivedChar);
 404              		.loc 1 110 5 is_stmt 1 view .LVU95
 405 001e FFF7FEFF 		bl	QueuePush
 406              	.LVL27:
 407              	.L34:
 111:Core/Src/recieve.c ****   }
 112:Core/Src/recieve.c **** 
 113:Core/Src/recieve.c ****   HandleReceivedMorse();
 408              		.loc 1 113 3 view .LVU96
 409 0022 FFF7FEFF 		bl	HandleReceivedMorse
 410              	.LVL28:
 411              	.L33:
 114:Core/Src/recieve.c **** }...
 412              		.loc 1 114 1 is_stmt 0 view .LVU97
 413 0026 10BD     		pop	{r4, pc}
 414              	.LVL29:
 415              	.L38:
 106:Core/Src/recieve.c ****       irqEnabled = 1;
 416              		.loc 1 106 7 is_stmt 1 view .LVU98
 106:Core/Src/recieve.c ****       irqEnabled = 1;
 417              		.loc 1 106 18 is_stmt 0 view .LVU99
 418 0028 0122     		movs	r2, #1
 419 002a 034B     		ldr	r3, .L39
 420 002c 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccM045Kp.s 			page 11


 107:Core/Src/recieve.c ****       HAL_UART_Receive_IT(huart, &receivedChar, 1);
 421              		.loc 1 107 7 is_stmt 1 view .LVU100
 422 002e 0349     		ldr	r1, .L39+4
 423 0030 2046     		mov	r0, r4
 424 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 425              	.LVL30:
 108:Core/Src/recieve.c ****       return;
 426              		.loc 1 108 7 view .LVU101
 427 0036 F6E7     		b	.L33
 428              	.L40:
 429              		.align	2
 430              	.L39:
 431 0038 00000000 		.word	irqEnabled
 432 003c 00000000 		.word	receivedChar
 433              		.cfi_endproc
 434              	.LFE138:
 436              		.section	.bss.receivedChar,"aw",%nobits
 439              	receivedChar:
 440 0000 00       		.space	1
 441              		.section	.bss.symbolFinished,"aw",%nobits
 444              	symbolFinished:
 445 0000 00       		.space	1
 446              		.section	.data.isIdle,"aw"
 449              	isIdle:
 450 0000 01       		.byte	1
 451              		.section	.bss.isLedOn,"aw",%nobits
 454              	isLedOn:
 455 0000 00       		.space	1
 456              		.section	.bss.lastActionTime,"aw",%nobits
 457              		.align	2
 460              	lastActionTime:
 461 0000 00000000 		.space	4
 462              		.section	.bss.index,"aw",%nobits
 463              		.align	2
 466              	index:
 467 0000 00000000 		.space	4
 468              		.section	.bss.currentChar,"aw",%nobits
 471              	currentChar:
 472 0000 00       		.space	1
 473              		.text
 474              	.Letext0:
 475              		.file 2 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/13.3.1/include/stddef.h"
 476              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 477              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 478              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 479              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 480              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 481              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 482              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 483              		.file 10 "Core/Inc/global.h"
 484              		.file 11 "Core/Inc/queue.h"
 485              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccM045Kp.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 recieve.c
     /tmp/ccM045Kp.s:21     .text.TurnLedOn:00000000 $t
     /tmp/ccM045Kp.s:27     .text.TurnLedOn:00000000 TurnLedOn
     /tmp/ccM045Kp.s:49     .text.TurnLedOn:00000010 $d
     /tmp/ccM045Kp.s:54     .text.TurnLedOff:00000000 $t
     /tmp/ccM045Kp.s:60     .text.TurnLedOff:00000000 TurnLedOff
     /tmp/ccM045Kp.s:82     .text.TurnLedOff:00000010 $d
     /tmp/ccM045Kp.s:87     .text.HandleReceivedMorse:00000000 $t
     /tmp/ccM045Kp.s:93     .text.HandleReceivedMorse:00000000 HandleReceivedMorse
     /tmp/ccM045Kp.s:294    .text.HandleReceivedMorse:000000cc $d
     /tmp/ccM045Kp.s:444    .bss.symbolFinished:00000000 symbolFinished
     /tmp/ccM045Kp.s:460    .bss.lastActionTime:00000000 lastActionTime
     /tmp/ccM045Kp.s:449    .data.isIdle:00000000 isIdle
     /tmp/ccM045Kp.s:471    .bss.currentChar:00000000 currentChar
     /tmp/ccM045Kp.s:466    .bss.index:00000000 index
     /tmp/ccM045Kp.s:454    .bss.isLedOn:00000000 isLedOn
     /tmp/ccM045Kp.s:305    .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccM045Kp.s:311    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccM045Kp.s:357    .text.HAL_UART_RxCpltCallback:00000024 $d
     /tmp/ccM045Kp.s:439    .bss.receivedChar:00000000 receivedChar
     /tmp/ccM045Kp.s:363    .text.HandleReceive:00000000 $t
     /tmp/ccM045Kp.s:369    .text.HandleReceive:00000000 HandleReceive
     /tmp/ccM045Kp.s:431    .text.HandleReceive:00000038 $d
     /tmp/ccM045Kp.s:440    .bss.receivedChar:00000000 $d
     /tmp/ccM045Kp.s:445    .bss.symbolFinished:00000000 $d
     /tmp/ccM045Kp.s:455    .bss.isLedOn:00000000 $d
     /tmp/ccM045Kp.s:457    .bss.lastActionTime:00000000 $d
     /tmp/ccM045Kp.s:463    .bss.index:00000000 $d
     /tmp/ccM045Kp.s:472    .bss.currentChar:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GetTick
QueuePop
Morse
QueuePush
HAL_UART_Receive_IT
irqEnabled
HAL_UART_Receive
